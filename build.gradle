plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'de.undercouch.download' version '4.1.1'
    id "org.sonarqube" version "3.5.0.2730"
}

version = "0.1.1"
sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'

}

javafx {
    version = "11"
    modules = ['javafx.controls', 'javafx.fxml']
}

sonarqube {
    properties {
        property "sonar.projectKey", "Erdmanny_FST_Aufgabe_1"
        property "sonar.organization", "s4mibeck"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task downloadZIP(type: Download){
    src 'https://datahub.io/core/covid-19/r/covid-19_zip.zip'
    dest buildDir
    onlyIfModified true
}

task unzip(dependsOn: downloadZIP, type: Copy){
    def oldLocation = file("$buildDir/covid-19_zip.zip")
    def newLocation = file("$buildDir/zips")

    from zipTree(oldLocation)
    into newLocation
}

task copy(dependsOn: unzip, type: Copy){
    def oldLocation = file("$buildDir/zips/data/countries-aggregated_json.json")
    def newLocation = file("src/main/resources")

    from oldLocation
    into newLocation
}


task buildCore(dependsOn: copy) {
    doLast {
        sourceSets {
            main {
                java {
                    srcDir 'main'
                    exclude '**/ui/*.java'
                }
            }
            test {
                java {
                    srcDir 'test'
                    include '**/core/*.java'
                }
            }
        }
    }
    finalizedBy(build)
}


task buildUI(dependsOn: copy) {
    doLast {
        sourceSets {
            main {
                java {
                    srcDir 'main'
                }
            }
            test {
                java {
                    srcDir 'test'
                    include '**/core/*.java'
                    include '**/ui/*.java'
                }
            }
        }
    }
    finalizedBy(build)
}



task runCore(dependsOn: buildCore) {
    doLast {
        mainClassName = "de.unitrier.st.core.Main"
    }
    finalizedBy(run)
}

task runUI(dependsOn: buildUI) {
    doLast{
        mainClassName = "de.unitrier.st.ui.Ui"
    }
    finalizedBy(run)
}




